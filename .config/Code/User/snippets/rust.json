{
	// Place your snippets for rust here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Competitive Programming": {
		"prefix": "cp",
		"body": [
			"use std::io::stdin;",
			"",
			"fn main(){",
			"\tlet mut input = String::new();",
			"\tstdin().read_line(&mut input).unwrap();",
			"\tlet t: i32 = input.trim().parse().unwrap();",
			"",
			"\tlet mut a$1;",
			"",
			"\tfor _ in 0..t {",
			"\t\t$2",
			"\t}",
			"}"
		],
		"description": "quick snippet for competitive programming in rust"
	},
	"Take input": {
		"prefix": "inp",
		"body": [
			"input.clear();\nstdin().read_line(&mut input).unwrap();\n",
		],
		"description": "take the input quick!!"
	},
	"input to vector": {
		"prefix": "i2v",
		"body": [
			"input.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n",
		],
		"description": "take the input quick!!"
	},
}